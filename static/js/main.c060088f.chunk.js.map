{"version":3,"sources":["Components/MainPage/MainPage.module.css","Components/NavBar/Home&Settings&Logo/Logo.module.css","Components/NavBar/NavBar.module.css","Components/NavBar/Home&Settings&Logo/Home.module.css","Components/NavBar/Home&Settings&Logo/Settings.module.scss","Components/MainPage/TodoItem/ToDoItem.module.scss","Components/Header/Header.module.scss","Components/BackgroundApp/BackgroundApp.module.scss","Components/MainPage/ComlitedItem/ComlitedItem.module.css","Components/NavBar/Home&Settings&Logo/Home.jsx","Components/NavBar/Home&Settings&Logo/Settings.jsx","Components/NavBar/Home&Settings&Logo/Logo.jsx","Components/NavBar/NavBar.jsx","redux/todoReducer.js","Components/Header/Header.jsx","Components/MainPage/TodoItem/ToDoItem.jsx","Components/MainPage/TodoItem/ToDoItems.jsx","Components/MainPage/ComlitedItem/ComlitedItem.jsx","Components/MainPage/ComlitedItem/ComlitedItems.jsx","Components/MainPage/MainPage.jsx","Components/BackgroundApp/BackgroundApp.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Home","className","style","home","linkName","size","icon","faHome","links","Settings","container","faCog","Logo","logo","outerCircle","innerCircle","logoName","NavBar","navBar","activeClassName","activeLink","to","initialState","status","toDoCount","toDo","complited","complitedCount","toDoId","deleteTodoAC","id","type","changeTextAC","description","addNewToDoAC","reducer","state","action","newdelToDo","filter","tl","length","newdelCompletedToDo","date","Date","toLocaleString","newToDo","nameToDo","priority","newComletedItem","newTodoItems","el","newTasks","map","t","newToDoItems","connect","todoReducer","dispatch","addNewToDo","getState","saveToDoItems","JSON","stringify","localStorage","setItem","props","containerCssClass","headerDark","headerLight","onClick","addToDoButton","deleteToDo","changeText","text","changeNameToDo","changeNameToDoAC","addCurrentTodoInCompleted","addCurrentTodoInCompletedAC","useState","mode","editMode","mode1","editMode1","toDoTask","statusToDoTask","numberPriority","newPriority","todoContainer","key","header","headerChilds","faClock","onChange","e","currentTarget","value","autoFocus","onBlur","placeholder","nameToDoItem","content","buttons","faEllipsisV","deleteButton","comletedButton","closeButton","trash","faTrash","todo","containerDark","containerLight","deleteCompletedTodoAC","faCheckCircle","completed","completedCount","backGroundApp","mainPageDark","mainPageLight","toDoDark","toDoLight","changeBackgroundApp","changeBackgroundAppAC","setState","backgroundAppDark","backgroundAppLight","elements","Switch","checked","color","inputProps","App","path","render","Boolean","window","location","hostname","match","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c060088f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPageLight\":\"MainPage_mainPageLight__1o4ky\",\"mainPageDark\":\"MainPage_mainPageDark__15o-6\",\"todoContainer\":\"MainPage_todoContainer__3Kl_0\",\"deleteButton\":\"MainPage_deleteButton__3Pou4\",\"completed\":\"MainPage_completed__HqrrI\",\"date\":\"MainPage_date__22o12\",\"toDoDark\":\"MainPage_toDoDark__1n1D2\",\"toDoLight\":\"MainPage_toDoLight__1CXF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2WSYJ\",\"logoName\":\"Logo_logoName__OQdcS\",\"outerCircle\":\"Logo_outerCircle__2DwEX\",\"innerCircle\":\"Logo_innerCircle__12Qb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1ZyWF\",\"activeLink\":\"NavBar_activeLink__2Dc9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"Home_links__19Dq_\",\"linkName\":\"Home_linkName__3Z93A\",\"home\":\"Home_home__Gd_B0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__yKQn6\",\"linkName\":\"Settings_linkName__2I1qG\",\"links\":\"Settings_links__1psoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLight\":\"ToDoItem_containerLight__2N_08\",\"containerDark\":\"ToDoItem_containerDark__d-RXI\",\"todoContainer\":\"ToDoItem_todoContainer__35kgZ\",\"header\":\"ToDoItem_header__10hDp\",\"headerChilds\":\"ToDoItem_headerChilds___EROW\",\"nameToDoItem\":\"ToDoItem_nameToDoItem__2HYon\",\"content\":\"ToDoItem_content__1uPU7\",\"description\":\"ToDoItem_description__2WmiH\",\"trash\":\"ToDoItem_trash__3FEVG\",\"buttons\":\"ToDoItem_buttons__2Jq1C\",\"closeButton\":\"ToDoItem_closeButton__eXvAN\",\"deleteButton\":\"ToDoItem_deleteButton__1pfyI\",\"completed\":\"ToDoItem_completed__b3qUE\",\"date\":\"ToDoItem_date__2JF4Q\",\"headerBox\":\"ToDoItem_headerBox__30P2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerLight\":\"Header_headerLight__2we4A\",\"darkToLigh\":\"Header_darkToLigh__1u0Xu\",\"addToDoButton\":\"Header_addToDoButton__3Hevf\",\"headerDark\":\"Header_headerDark__3EOca\",\"lightToDar\":\"Header_lightToDar__mKiYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundAppLight\":\"BackgroundApp_backgroundAppLight__2vTZA\",\"darkToLight\":\"BackgroundApp_darkToLight__1bUt9\",\"elements\":\"BackgroundApp_elements__3x7TW\",\"backgroundAppDark\":\"BackgroundApp_backgroundAppDark__1Bqa4\",\"lightToDark\":\"BackgroundApp_lightToDark__3SwHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLight\":\"ComlitedItem_containerLight__3rPSa\",\"containerDark\":\"ComlitedItem_containerDark__1Xhsz\",\"todoContainer\":\"ComlitedItem_todoContainer__2XfJo\",\"deleteButton\":\"ComlitedItem_deleteButton__PyrJs\",\"completed\":\"ComlitedItem_completed__2UJY0\",\"date\":\"ComlitedItem_date__1MTMg\"};","import React from 'react';\r\nimport style from './Home.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faHome} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={style.home}>\r\n            <div className={style.linkName}  ><FontAwesomeIcon size='1x' icon={faHome} className={style.links}/>Home</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport style from './Settings.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCog} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Settings = () => {\r\n    \r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.linkName}   ><FontAwesomeIcon size='1x' icon={faCog} className={style.links}/>Settings</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport style from './Logo.module.css';\r\n\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className={style.logo}>\r\n            <div className={style.outerCircle}>\r\n                <div className={style.innerCircle}></div>\r\n            </div>\r\n            <div className={style.logoName}>ToDo</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport Home from './Home&Settings&Logo/Home';\r\nimport Settings from './Home&Settings&Logo/Settings';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Logo from './Home&Settings&Logo/Logo';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className={style.navBar}>\r\n            <Logo />\r\n            <NavLink activeClassName={style.activeLink} to=\"/home\"><Home /></NavLink>\r\n            <NavLink activeClassName={style.activeLink} to=\"/settings\"><Settings /></NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","const DELETE_TODO = 'DELETE_TODO';\r\nconst DELETE_COMPLETED_TODO = 'DELETE_COMPLETED_TODO';\r\nconst ADD_NEW_TODO = 'ADD_NEW_TODO';\r\nconst CHANGE_TEXT_TODO = 'CHANGE_TEXT_TODO';\r\nconst CHANGE_NAME_TODO = 'CHANGE_NAME_TODO';\r\nconst CHANGE_BACKGROUND_APP = 'CHANGE_BACKGROUND_APP';\r\nconst REDIRECT_TODO_IN_COMPLETED = 'REDIRECT_TODO_IN_COMPLETED';\r\n\r\nconst initialState = {\r\n    status: false,\r\n    toDoCount: null,\r\n    toDo: [],\r\n    complited: [],\r\n    complitedCount: null,\r\n    \r\n}\r\nlet toDoId = null;\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type){\r\n        case DELETE_TODO:\r\n            let newdelToDo = state.toDo.filter(tl => {\r\n                return tl.id !== action.id\r\n            })\r\n            return { ...state, \r\n                toDo: newdelToDo ,\r\n                toDoCount: newdelToDo.length}\r\n        case DELETE_COMPLETED_TODO:\r\n            debugger\r\n            let newdelCompletedToDo = state.complited.filter(tl => {\r\n                return tl.id !== action.id\r\n            })\r\n            return { ...state, \r\n                complited: newdelCompletedToDo ,\r\n                complitedCount: newdelCompletedToDo.length}\r\n        case ADD_NEW_TODO:\r\n            toDoId++;\r\n           \r\n            let date = new Date().toLocaleString();\r\n            let newToDo = {id: toDoId,nameToDo: '...type name Todo' ,description: '...type description',priority: 'low', date: date};\r\n            let toDo = [...state.toDo, newToDo];\r\n            return { ...state, \r\n               toDo: toDo,\r\n               toDoCount: toDo.length\r\n            }\r\n        case REDIRECT_TODO_IN_COMPLETED:\r\n            let newComletedItem;\r\n            let newTodoItems = state.toDo.filter(el =>{\r\n                if(el.id !==action.id){\r\n                    return el;\r\n                }\r\n                else {\r\n                      newComletedItem = el;\r\n                }\r\n            })\r\n            return { ...state, \r\n               toDo:  newTodoItems,\r\n               complited: [...state.complited, newComletedItem ],\r\n               toDoCount: [state.toDoCount-1],\r\n               complitedCount: state.complited.length+1\r\n            }\r\n        case CHANGE_TEXT_TODO:\r\n                \r\n                let newTasks = state.toDo.map(t => {\r\n                    if (t.id !== action.id) {\r\n                        return t;\r\n                    }\r\n                    else {\r\n                        return { ...t,\r\n                            description: action.description };\r\n                    }\r\n                });\r\n\r\n            return { ...state, \r\n               toDo: newTasks\r\n            }\r\n        case CHANGE_NAME_TODO:\r\n                \r\n                let newToDoItems = state.toDo.map(t => {\r\n                    if (t.id !== action.id) {\r\n                        return t;\r\n                    }\r\n                    else {\r\n                        return { ...t,\r\n                            nameToDo: action.nameToDo };\r\n                    }\r\n                });\r\n\r\n            return { ...state, \r\n               toDo: newToDoItems\r\n            }\r\n        case CHANGE_BACKGROUND_APP:\r\n           \r\n            return { ...state, \r\n                status: action.status\r\n            }\r\n        default: return state\r\n    }\r\n}\r\nexport const addNewToDoThunkAC = () => (dispatch,getState)=>{\r\n    debugger\r\n    dispatch(addNewToDoAC());\r\n    let state = getState().todoReducer.toDo;\r\n    let saveToDoItems = JSON.stringify(state);\r\n        localStorage.setItem(\"our-state\", saveToDoItems);\r\n        \r\n}\r\nexport const deleteTodoAC = (id)=>({type:DELETE_TODO, id});\r\nexport const deleteCompletedTodoAC = (id)=>({type:DELETE_COMPLETED_TODO, id});\r\nexport const addCurrentTodoInCompletedAC = (id)=>({type:REDIRECT_TODO_IN_COMPLETED, id});\r\nexport const changeTextAC = (id,description)=>({type:CHANGE_TEXT_TODO, id, description});\r\nexport const changeNameToDoAC = (id,nameToDo)=>({type:CHANGE_NAME_TODO, id, nameToDo});\r\nexport const addNewToDoAC = ()=>({type:ADD_NEW_TODO});\r\nexport const changeBackgroundAppAC = (status)=>({type:CHANGE_BACKGROUND_APP, status});\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport style from './Header.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport {addNewToDoThunkAC} from '../../redux/todoReducer'\r\nconst Header =(props) => {\r\n  let containerCssClass = props.status === true ? style.headerDark : style.headerLight;\r\n  return (\r\n    <div className={containerCssClass}>\r\n        <div onClick={()=>props.addNewToDo()} className={style.addToDoButton}>New ToDo</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { \r\n    status: state.todoReducer.status\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewToDo: () => {\r\n        dispatch(addNewToDoThunkAC());\r\n      }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './ToDoItem.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faClock, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\r\nimport { deleteTodoAC, changeTextAC, addCurrentTodoInCompletedAC, changeNameToDoAC } from '../../../redux/todoReducer'\r\n\r\nconst ToDoItem = (props) => {\r\n  const [mode, editMode] = useState(false);\r\n  const [mode1, editMode1] = useState(false);\r\n  const [toDoTask, statusToDoTask] = useState(true);\r\n  let toDoDescription = (e) => {\r\n    props.changeText(props.el.id, e.currentTarget.value);\r\n  }\r\n  let toDoName = (e) => {\r\n    props.changeNameToDo(props.el.id, e.currentTarget.value);\r\n  }\r\n  let numberPriority = 1;\r\n  let newPriority = 'low';\r\n  let onchangePriority = ()=>{\r\n    numberPriority++;\r\n    if(numberPriority>3){\r\n      numberPriority=1;\r\n    }\r\n    \r\n    if(numberPriority===1){\r\n      newPriority=\"low\"\r\n    }\r\n    else if(numberPriority===2){\r\n      newPriority=\"Medium\"\r\n    }\r\n    else if(numberPriority===3){\r\n      newPriority=\"High\"\r\n    }\r\n\r\n  }\r\n  // let containerCssClass = props.status === true ? style.containerDark : style.containerLight;\r\n  debugger\r\n  return <div className={style.todoContainer} key={props.el.id}>\r\n    <div className={style.header}>\r\n      <div className={style.headerChilds}>\r\n        <div className={style.priority} onClick={()=>{onchangePriority()}}>{newPriority} priority</div>\r\n        <FontAwesomeIcon size='1x' icon={faClock} className={style.date} />\r\n        <div>{props.el.date}</div>\r\n      </div>\r\n    </div>\r\n    {mode1 ?\r\n      <input onChange={toDoName} autoFocus={true} onBlur={() => editMode1(false)} value={props.nameToDo} placeholder='...change ToDoName' />\r\n      : <div className={style.nameToDoItem} onClick={() => editMode1(true)}>{props.el.nameToDo}</div>}\r\n    <div className={style.content}>\r\n      {mode ?\r\n        <input onChange={toDoDescription} autoFocus={true} onBlur={() => editMode(false)} value={props.description} placeholder='...change description ' />\r\n        : <div className={style.description} onClick={() => editMode(true)}>{props.el.description}</div>}\r\n      \r\n      \r\n      <div className={style.buttons} onClick={() => { statusToDoTask(false) }}>\r\n        {toDoTask ?\r\n          <FontAwesomeIcon size='1x' icon={faEllipsisV} className={style.deleteButton} />\r\n          : <button className={style.comletedButton} onClick={() => props.addCurrentTodoInCompleted(props.el.id)}>Completed</button>} \r\n      </div>\r\n      {!toDoTask ? <button className={style.closeButton} onClick={() => { statusToDoTask(true) }} >close</button> : ''}\r\n      \r\n      <div className={style.trash} onClick={() => { props.deleteToDo(props.el.id) }} >\r\n        <FontAwesomeIcon size='1x' icon={faTrash} className={style.deleteButton} />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    description: state.todoReducer.toDo.description,\r\n    status: state.todoReducer.status,\r\n    nameToDo: state.todoReducer.nameToDo\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteToDo: (id) => {\r\n      dispatch(deleteTodoAC(id));\r\n    },\r\n    changeText: (id, text) => {\r\n      dispatch(changeTextAC(id, text));\r\n    },\r\n    changeNameToDo: (id, text) => {\r\n      dispatch(changeNameToDoAC(id, text));\r\n    },\r\n    addCurrentTodoInCompleted: (id) => {\r\n      dispatch(addCurrentTodoInCompletedAC(id));\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoItem);\r\n","import React from 'react';\r\nimport style from './ToDoItem.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nconst ToDoItems = (props) => {\r\n  \r\n  let containerCssClass = props.status === true ? style.containerDark : style.containerLight;\r\n  return (\r\n    <div className={containerCssClass}>\r\n      {props.todo.map(el => <ToDoItem el={el} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todo: state.todoReducer.toDo,\r\n    status: state.todoReducer.status\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ToDoItems);\r\n","import React from 'react';\r\nimport style from '../TodoItem/ToDoItem.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { deleteCompletedTodoAC} from '../../../redux/todoReducer'\r\n\r\nconst CompletedItem = (props) => {\r\n  return <div className={style.todoContainer} key={props.el.id}>\r\n    <div className={style.header}>\r\n      <div className={style.headerChilds}>\r\n        <FontAwesomeIcon size='0.5x' icon={faCheckCircle} className={style.completed} />\r\n      </div>\r\n    </div>\r\n    <div className={style.nameToDoItem} >{props.el.nameToDo}</div>\r\n    <div className={style.content}>\r\n      <div className={style.description} >{props.el.description}</div>\r\n      <div className={style.trash} onClick={() => { props.deleteToDo(props.el.id) }} >\r\n        <FontAwesomeIcon size='1x' icon={faTrash} className={style.deleteButton} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    complited: state.todoReducer.complited\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteToDo: (id) => {\r\n      dispatch(deleteCompletedTodoAC(id));\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedItem);\r\n","import React from 'react';\r\nimport style from './ComlitedItem.module.css';\r\nimport { connect } from 'react-redux';\r\nimport CompletedItem from './ComlitedItem'\r\nimport {deleteTodoAC,changeTextAC} from '../../../redux/todoReducer'\r\n\r\nconst CompletedItems = (props) => {\r\n  let containerCssClass = props.status === true ? style.containerDark : style.containerLight;\r\n  \r\n  return (\r\n    <div className={containerCssClass}>\r\n      {props.complited.map(el =><CompletedItem el={el}/> )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { \r\n    complited: state.todoReducer.complited,\r\n    status: state.todoReducer.status\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteToDo: (id) => {\r\n        dispatch(deleteTodoAC(id));\r\n      },\r\n      changeText: (text,id) => {\r\n        dispatch(changeTextAC(text,id));\r\n      },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedItems);\r\n","import React from 'react';\r\nimport style from './MainPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport ToDoItems from './TodoItem/ToDoItems';\r\nimport CompletedItem from './ComlitedItem/ComlitedItems';\r\n\r\nconst MainPage = (props) => {\r\n  let containerCssClass = props.status === true ? style.mainPageDark : style.mainPageLight;\r\n  return (\r\n    <div className={containerCssClass}>\r\n      {props.status === true ?\r\n        <div className={style.toDoDark}>ToDo({props.toDoCount})</div>\r\n        : <div className={style.toDoLight}>ToDo({props.toDoCount})</div>}\r\n        <ToDoItems />\r\n        {props.status === true ?\r\n        <div className={style.toDoDark}>Completed({props.completedCount})</div>\r\n        : <div className={style.toDoLight}>Completed({props.completedCount})</div>}\r\n        <CompletedItem />\r\n      {props.backGroundApp}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.todoReducer.status,\r\n    toDoCount: state.todoReducer.toDoCount,\r\n    completedCount: state.todoReducer.complitedCount,\r\n    backGroundApp: state.todoReducer.backGroundApp\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(MainPage);\r\n","import React, { useState } from 'react';\r\nimport style from './BackgroundApp.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {changeBackgroundAppAC} from '../../redux/todoReducer'\r\n\r\n\r\nconst BackgroundApp = (props) => {\r\n    const [state, setState] = useState(false);\r\n\r\n    // const changeBackgroundApp = name => event => {\r\n    //     setState({ ...state, [name]: event.target.checked });\r\n    //     // props.changeBackgroundApp(name);\r\n    // };\r\n    const changeBackgroundApp = () => {\r\n        setState(!state);\r\n        props.changeBackgroundApp(state);\r\n    };\r\n    let containerCssClass = props.status === true ? style.backgroundAppDark : style.backgroundAppLight;\r\n    return (\r\n        <div className={containerCssClass}>\r\n           <div className={style.elements}>Change Background App - <Switch onChange={changeBackgroundApp} checked={props.status} value={state.checked} color=\"primary\" inputProps={{ 'aria-label': 'primary checkbox' }} /></div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      status: state.todoReducer.status\r\n      \r\n    }\r\n  };\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeBackgroundApp: (status) => {\r\n          dispatch(changeBackgroundAppAC(status));\r\n        }\r\n      }\r\n  \r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BackgroundApp);\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Header from './Components/Header/Header';\nimport MainPage from './Components/MainPage/MainPage';\nimport {Route} from 'react-router-dom';\nimport BackgroundApp from './Components/BackgroundApp/BackgroundApp';\n\nconst App =() => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Header />\n      <Route path='/home' render={()=><MainPage />} />\n      <Route path='/settings' render={()=><BackgroundApp />} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore,applyMiddleware,combineReducers} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport todoReducer from './todoReducer'\r\n\r\nconst reducer = combineReducers({\r\n    todoReducer: todoReducer\r\n})\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}